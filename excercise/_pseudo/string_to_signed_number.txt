In the previous exercise, you developed a method that converts simple numeric strings to Integers. In this exercise, you're going to extend that method to work with signed numbers.

Write a method that takes a String of digits, and returns the appropriate number as an integer. The String may have a leading + or - sign; if the first character is a +, your method should return a positive number; if it is a -, your method should return a negative number. If no sign is given, you should return a positive number.

You may assume the string will always contain a valid number.

You may not use any of the standard conversion methods available in Ruby, such as String#to_i, Integer(), etc. You may, however, use the string_to_integer method from the previous lesson.

string_to_signed_integer('4321') == 4321
string_to_signed_integer('-570') == -570
string_to_signed_integer('+100') == 100

Requirement:
- Take string and output integer
- If the first sign is + return positive number
- If there is no first sign, return a positive number
- If the first sign is -, return a negative number

Data Structure:
- Hash that convert string to integer

Algorithm:
- Iterate through the input
- Check the first character
- If it is a number, convert to integer
- If it is a plus sign, ignore the sign and convert the rest to integer
- If it is a minus sign, convert the negative of the following integer
- Return the integer